s_ <- 1
min(data.size.vec)
min(data.size.vec)
1/(1:min(data.size.vec))
seq(0,1,length.out=min(data.size.vec))
data.mles
dbinom(x=data.mles*5,size=5,prob=mu.true)
data.mles
data.mles*N
data.mles*5
data.mles*4
data.mles*length(data.mles)+1
data.mles*length(data.mles)
data.mles*length(data.mles)+2
data.mles*(length(data.mles)+1)
data.mles*(length(data.mles))
data.mles*(length(data.mles)+2)
data.mles*(length(data.mles))
data.mles
data.mles*5
data.mles*(length(data.mles)-1)
dbinom(data.mles*(length(data.mles)-1),size=min(data.size.vec),prob=mu.true)
hist(y.ratio.true)
y
y
y
y
y.ratio.true
data.mles*(length(data.mles)-1)
min(data.size.vec)
mu.true
y.ratio.true
y.ratio.true
jagsinits
getwd()
nu
curves_
sapply(seq(0.1,0.4,0.001),function(x){ 2*dt(x,df=curves_[c_,"nu"])*curves_[c_,"sigma"]})
c_ =1
function(x){ 2*dt(x,df=curves_[c_,"nu"])*curves_[c_,"sigma"]}
sapply(seq(0.1,0.4,0.001),function(x){ 2*dt(x,df=curves_[c_,"nu"])*curves_[c_,"sigma"]})
c_
curves_[c_,"sigma"]
dt(xseq,df=curves_[c_,"nu"])*curves_[c_,"sigma"]
nu
scenarios
c_
?dt
integrate(f=function(x) dhalft(x,sigma=0.2,nu=2),lower=0,upper=10)
integrate(f=function(x) dhalft(x,sigma=0.2,nu=2),lower=0,upper=10)
integrate(f=function(x) dhalft(x,sigma=0.2,nu=2),lower=0,upper=10)
integrate(f=function(x) dhalft(x,sigma=0.2,nu=2),lower=0.00000000000001,upper=10)
integrate(f=function(x) dhalft(x,sigma=0.2,nu=3),lower=0.00000000000001,upper=10)
integrate(f=function(x) dhalft(x,sigma=0.2,nu=3),lower=0.00000000000001,upper=100)
integrate(f=function(x) dhalft(x, sigma=0.3,nu=3),lower=0.00000000000001,upper=100)
integrate(f=function(x) dhalft(x, sigma=0.3,nu=3),lower=0.00000000000001,upper=1)
s_ = 1
scenarios
y
dev.off()
y
?Binomial
sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))
unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_))))
data.frame(y=unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group = rep(1:N.groups,N))
y
length(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_))))
(unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))))
length(unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))))
N
y_=5
c(rep(1,y_),rep(0,N-y_))
c(rep(1,y_),rep(0,N-y_)); y_ = y_-1
c(rep(1,y_),rep(0,N-y_)); y_ = y_-1
c(rep(1,y_),rep(0,N-y_)); y_ = y_-1
c(rep(1,y_),rep(0,N-y_)); y_ = y_-1
c(rep(1,y_),rep(0,N-y_)); y_ = y_-1
c(rep(1,y_),rep(0,N-y_)); y_ = y_-1
y
(unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))))
unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_))))
lapply(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_))),length)
y.true
Y.true
y
Y.true[4]
y[4]
c(rep(1,3),rep(0,N-3))
y
sapply(c(0:5),function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(c(3,3,3),function(y_) c(rep(1,y_),rep(0,N-y_)))
y
sapply(c(4,1,4,3),function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(c(4,1,4,3,4),function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(c(4,1,4,3,4,5),function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(y[1:4],function(y_) c(rep(1,y_),rep(0,N-y_)))
class(y)
class(y[4])
sapply(y[-4],function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(y[-4],function(y_) c(rep(1,y_),rep(0,N-y_)))
sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))
unlist(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_))))
as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_))))
data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=rep(1:N.groups,each=N))
data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=rep(1:N.groups,each=N))
glm(y~group,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=rep(1:N.groups,each=N)))
summary(glm(y~group,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=rep(1:N.groups,each=N))))
coef(glm(y~group,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=rep(1:N.groups,each=N))))
summary(glm(y~group,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=factor(rep(1:N.groups,each=N)))))
coef(glm(y~group,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=factor(rep(1:N.groups,each=N)))))
coef(glm(y~group-1,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=factor(rep(1:N.groups,each=N)))))
coef(glm(y~group-1,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=factor(rep(1:N.groups,each=N)))))
1/(1+exp(-coef(glm(y~group-1,family="binomial",data=data.frame(y=as.numeric(sapply(y,function(y_) c(rep(1,y_),rep(0,N-y_)))), group=factor(rep(1:N.groups,each=N)))))))
data.mle
data.mles
y.ratio.true
names(m.glm)
m.glm$coefficients
m.glm$fitted.values
names(m.glm)
(m.glm$R)
(m.glm$qr)
summary(m.glm)
names(summary(m.glm))
(summary(m.glm))[,"terms"]
(summary(m.glm))[["terms"]]
names(summary(m.glm))
(summary(m.glm))[["coefficients"]]
(summary(m.glm))[["coefficients"]][,"Std. Error"]
(summary(m.glm))[["coefficients"]][,"Std. Error"]
(summary(m.glm))[["coefficients"]][,"Std. Error"]
paste0("group",1:N.groups)
m.se = (summary(m.glm))[["coefficients"]][paste0("group",1:N.groups),"Std. Error"]
m.se
pnorm(97.5)
qnorm(97.5)
qnorm(0.975)
m.hici
dev.off()
s_
c("5"="sparse","10"="low","20"="moderate","200"="high")[as.character(N)]
paste0(c("5"="sparse","10"="low","20"="moderate","200"="high")[as.character(N)],"\n(",N," observations per group)")
plot(2,2)
paste0('text(x=1.2,y=6, labels=substitute("f("*sigma*")"*%prop%*"T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')
text(x=1.2,y=6, labels=substitute(\"f(\"*sigma*\")\"*%prop%*\"T(0, s=\"*0.2*\",\"~nu~\"=10)I[\"~sigma>0~\"]\"),cex=2,pos=2,font=2)
    eval(parse(text =paste0('text(x=1.2,y=6, labels=substitute("f("*sigma*")"*%prop%*"T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')))
eval(parse(text =paste0('text(x=1.2,y=6, labels=expression("f("*sigma*")"*%prop%*"T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')))
eval(parse(text =paste0('text(x=1.2,y=6, labels=expression("f("*sigma*")"~ %prop% ~"T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')))
text(2,2,labels=expression(sigma[1]))
text(2,2,labels=expression(sigma[1]%prop%))
text(2,2,labels=expression(sigma[1]%prop%))
text(2,2,labels=expression(sigma[1] %prop% ))
text(2,2,labels=expression(sigma*%prop%*))
text(2,2,labels=expression(sigma*prop*))
text(2,2,labels=expression(sigma prop))
text(2,2,labels=expression(sigma*prop))
plot(2,2)
text(2,2,labels=expression(sigma*prop))
text(2,2,labels=expression(sigma*%prop))
text(2,2,labels=expression(sigma*prop%))
install.packages("plotmath")
text(2,2,labels=expression(b %prop% a))
plot(2,2);text(2,2,labels=expression(b %prop% a))
plot(2,2,typ="n");text(2,2,labels=expression(b %prop% a))
plot(2,2,typ="n");text(2,2,labels=expression(sigma %prop% a))
plot(2,2,typ="n");text(2,2,labels=expression(sigma %prop% "f"))
eval(parse(text =paste0('text(x=1.2,y=6, labels=expression("f("*sigma*")" %prop% "T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')))
eval(parse(text =paste0('text(x=1.2,y=2, labels=expression("f("*sigma*")" %prop% "T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')))
eval(parse(text =paste0('text(x=2,y=2, labels=expression("f("*sigma*")" %prop% "T(0, s="*',sigma,'*","~nu~"=',nu,')I["~sigma>0~"]"),cex=2,pos=2,font=2)')))
plot(2,2,typ="n");text(2,2,labels=expression(sigma %prop% "f"))
plot(c(0,1.2),c(0,8),xlab = expression(sigma), ylab = expression("density f("~sigma~")"),cex.lab=1.5,type="n")
plot(c(0,1.2),c(0,8),xlab = expression(sigma), ylab = expression("density f("~sigma~")"),cex.lab=1.5,type="n")
plot(c(0,1.2),c(0,8),xlab = expression(sigma), ylab = expression("density f("~sigma~")"),cex.lab=1.5,type="n")
dev.off()
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
sigma
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
sigma
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
nu.vec
    plot(c(0,0.8),c(0,8),xlab = expression(sigma), ylab = expression("density f("*sigma*")"),cex.lab=1.5,type="n",main="Scaled Half Student-t: Hyperprior",cex.main=1.8)
convert -delay 120 -loop 0 -layers optimize *.png HalfTdemo.gif  # 681kb
dev.of()
dev.off()
y.ratio.true
table(y.ratio.true)
s_
s_ <- 1
    eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group(sigma,tau)]),cex=2,font=2)')))    
    eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group(sigma,tau)),cex=2,font=2)')))    
    eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group(list(sigma,tau))),cex=2,font=2)')))    
    eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group(list("[","]"))),cex=2,font=2)')))    
    eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group("[",list(a,b),"]}))x=2,font=2)')))    
    eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group("[",list(a,b),"]"))x=2,font=2)')))    
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group("[",list(a,b),"]"))x=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group("[",list(a,b),"]"))x=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*group("[",list(a,b),"]")),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group("[",list(a,b),"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group("[",list(sigma,b),"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group("[",list(sigma,0),"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=5.5, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group(sigma,tau)]),cex=2,font=2)')))    
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group("[",list(sigma,0),"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group("[",sigma,"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*1[group("[",sigma>0,"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*plain(1)[group("[",sigma>0,"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.55,y=6-1, labels=expression("f("*sigma*")" %prop% "T("*mu*","*tau*","*nu*")"*plain(1)[group("[",sigma>0,"]")]),cex=2,font=2)'))) 
eval(parse(text =paste0('text(x=0.52+space[1]*0,y=5.2, labels=expresssion(over(1,',sigma.vec[1],'),cex=2,font=2,col=c("grey80",curcol)[1+1*(sigma==sigma.vec[1])],pos=1)')))
eval(parse(text =paste0('text(x=0.52+space[1]*0,y=5.2, labels=expresssion(over(1,',sigma.vec[1],')),cex=2,font=2,col=c("grey80",curcol)[1+1*(sigma==sigma.vec[1])],pos=1)')))
eval(parse(text =paste0('text(x=0.52+space[1]*0,y=5.2, labels=expression(over(1,',sigma.vec[1],')),cex=2,font=2,col=c("grey80",curcol)[1+1*(sigma==sigma.vec[1])],pos=1)')))
